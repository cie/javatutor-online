# yaml-language-server: $schema=file:///home/cie/git/javatutor/tasks.schema.json

- id: hello-world
  title: Hello, $NAME!
  description: |
    Welcome and thanks for participating! 
    This is a warm-up task so you can get familiar with the environment.
    Whenever you are stuck, feel free to use the
    <img src="/hand.png" alt="hand" width=30 height=30 style="transform: rotate(15deg); opacity: 0.9; display: inline-block; vertical-align:middle">
    button to ask for help.

    Write a program that asks for the name of the user and then greets them:

    <pre class="output">
    <code>Enter your name: <code class="user-input user-input-line">$NAME</code>
    Hello, $NAME!</code>
    </pre>

    The **Input** box below contains the user input that will be sent to your program when you press Run:
    one line in the box is one line entered.

    You can run the program with the
    <span class="bg-green-600 text-white rounded px-2 py-1 text-sm" style="box-shadow: 1px 2px 6px -2px inset rgba(255, 255, 255, 0.6), -1px -2px 5px -2px inset rgba(0, 0, 0, 0.4), 1px 3px 5px -1px rgba(0, 0, 0, 0.2);">Run</span>
    button and see its output in the **Output** box.

  initialCode: |
    import java.util.Scanner;

    public class Code {
        public static void main(String [] args) {
            Scanner input = new Scanner(System.in);
            System.out.println("Enter your name: ");
            String name = input.nextLine();
        }
    }
  input: $NAME
  hints:
    - match: |
        //BlockStatement[
          .//*[@Image="input.nextLine"] and not(.//BlockStatement)
          and not(following-sibling::*)]
      message: Use another System.out.println() call.
    - match: //PrimaryPrefix[Name/@Image="System.out.println"]/following-sibling::PrimarySuffix[Arguments/@Size=0]
      message: Add an argument. What do you want to output?
  tests:
    nothing entered yet:
      code: |
        import java.util.Scanner;

        public class Code {
            public static void main(String [] args) {
                Scanner input = new Scanner(System.in);
                System.out.println("Enter your name: ");
                String name = input.nextLine();
                
            }
        }
      hints:
        - message: Use another System.out.println() call.
    no arg for print():
      code: |
        import java.util.Scanner;

        public class Code {
            public static void main(String [] args) {
                Scanner input = new Scanner(System.in);
                System.out.println("Enter your name: ");
                String name = input.nextLine();
                System.out.println();
            }
        }
      hints:
        - message: Add an argument. What do you want to output?
- id: Lab_08_01
  title: Reverse a string
  description: |
    Write a program that prompts the user to enter a string and displays the string in reverse order.
  initialCode: |
    import java.util.Scanner;

    public class Lab_08_01 {
        public static void main(String [] args) {
            
        }
    }
  input: |
    Hello, World!
  hints:
    - message: Start with making a Scanner variable to take input from the user
      match: //MethodDeclaration[@Name="main"]/Block[count(.//*[@Image="Scanner"])=0]
    - message: Ask the user to enter a string
      match: |
        //MethodDeclaration[@Name="main"][
          not(.//PrimaryExpression
            [starts-with(PrimaryPrefix/Name/@Image, "System.out.print")]
            [contains(.//Literal/@Image, "enter") or contains(.//Literal/@Image, "Enter")])]
        /child::*[last()]
    - message: We need an empty string variable to use for reversing
      match: |
        //MethodDeclaration[@Name="main"][
          not(.//Literal[@Image='""'])]
        //BlockStatement[last()]
    - message: We need to make a for loop
      match: |
        //MethodDeclaration[@Name="main"][
          not(.//ForStatement)]
        //BlockStatement[last()]
    - message: The for loop won't start from 0 (WHY? becouse we don't know how long is the string entered by the user)
      match: |
        //ForInit[.//VariableInitializer/Expression/PrimaryExpression/PrimaryPrefix/Literal[@Image="0"]]
    - message: The for loop will start from (stirng length -1) (WHY? becouse we dont know how long is the string entered by the user)
      match: |
        //ForInit[.//VariableInitializer[not(.//AdditiveExpression[@Image="-"][*[2]/self::PrimaryExpression/PrimaryPrefix/Literal[@Image="1"]])]]
    - message: The for loop will decrese until 0
      match: |
        //ForStatement/Expression[not(RelationalExpression[@Image=">="][*[2]//Literal/@Image = "0"])]

  tests: {}
- id: Exercise_05_24
  title: Sum a series
  description: |
    Write a program to sum the following series:

    (1 / 3) + (3 / 5) + (5 / 7) + (7 / 9) + (9 / 11) + (11 / 13) + ... + (95 / 97) + (97 / 99)
  initialCode: |
    public class Exercise_05_24 {
      public static void main(String[] args) {

      }
    }
  input: ''
  hints: []
